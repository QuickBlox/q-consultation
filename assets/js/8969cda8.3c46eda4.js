"use strict";(self.webpackChunk_qc_doc_docusaurus=self.webpackChunk_qc_doc_docusaurus||[]).push([[597],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>f});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),c=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},d=function(e){var t=c(e.components);return a.createElement(s.Provider,{value:t},e.children)},u="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),u=c(n),m=r,f=u["".concat(s,".").concat(m)]||u[m]||p[m]||i;return n?a.createElement(f,o(o({ref:t},d),{},{components:n})):a.createElement(f,o({ref:t},d))}));function f(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,o=new Array(i);o[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[u]="string"==typeof e?e:r,o[1]=l;for(var c=2;c<i;c++)o[c]=n[c];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},3605:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>p,frontMatter:()=>i,metadata:()=>l,toc:()=>c});var a=n(7462),r=(n(7294),n(3905));const i={sidebar_label:"Using QuickBlox SDK",sidebar_position:2},o="Using QuickBlox SDK",l={unversionedId:"dev/development/general/quickblox-sdk",id:"dev/development/general/quickblox-sdk",title:"Using QuickBlox SDK",description:"In our application, we have integrated the QuickBlox SDK to enable video and audio calls, as well as to provide chat functionality.",source:"@site/docs/dev/development/general/quickblox-sdk.md",sourceDirName:"dev/development/general",slug:"/dev/development/general/quickblox-sdk",permalink:"/q-consultation/dev/development/general/quickblox-sdk",draft:!1,editUrl:"https://github.com/QuickBlox/q-consultation/tree/master/documentation/docs/dev/development/general/quickblox-sdk.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_label:"Using QuickBlox SDK",sidebar_position:2},sidebar:"docPagesSidebar",previous:{title:"General",permalink:"/q-consultation/dev/development/general"},next:{title:"Applications",permalink:"/q-consultation/dev/development/apps"}},s={},c=[{value:"Extended QuickBlox SDK",id:"extended-quickblox-sdk",level:2},{value:"Utilities",id:"utilities",level:2},{value:"<code>promisifyCall</code>",id:"promisifycall",level:3},{value:"<code>isQBError</code>",id:"isqberror",level:3},{value:"<code>userHasTag</code>",id:"userhastag",level:3},{value:"<code>parseUserCustomData</code>",id:"parseusercustomdata",level:3},{value:"<code>stringifyUserCustomData</code>",id:"stringifyusercustomdata",level:3}],d={toc:c},u="wrapper";function p(e){let{components:t,...n}=e;return(0,r.kt)(u,(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"using-quickblox-sdk"},"Using QuickBlox SDK"),(0,r.kt)("p",null,"In our application, we have integrated the ",(0,r.kt)("a",{parentName:"p",href:"https://docs.quickblox.com/docs/js-quick-start"},"QuickBlox SDK")," to enable video and audio calls, as well as to provide chat functionality."),(0,r.kt)("h2",{id:"extended-quickblox-sdk"},"Extended QuickBlox SDK"),(0,r.kt)("p",null,"In our application, we have extended the ",(0,r.kt)("a",{parentName:"p",href:"https://docs.quickblox.com/docs/js-quick-start"},"QuickBlox SDK")," by creating the QBExtended class.\nThis class enhances the functionality of the QuickBlox library and provides additional capabilities for handling various aspects of the application,\nsuch as user management, data, and content."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="Internal Type"',title:'"Internal','Type"':!0},"declare type Dictionary<T> = Record<string, T>\n\ndeclare interface QBCallback<T> {\n  (error: null | undefined, result: T): void\n  (error: QBError, result: null | undefined): void\n}\n\ndeclare type QBExtendedUsers = QuickBlox['users'] & {\n  getById(id: QBUser['id'], callback: QBCallback<QBUser>): void\n}\n\ndeclare type QBExtendedData = QuickBlox['data'] & {\n  createChild<T extends QBCustomObject>(\n    parentClassName: string,\n    parentId: QBCustomObject['_id'],\n    childClassName: string,\n    data: Dictionary<unknown>,\n    callback: QBCallback<T>,\n  ): void\n  updateByCriteria<T extends QBCustomObject>(\n    className: string,\n    filters: Dictionary<unknown>,\n    data: Dictionary<unknown>,\n    callback: QBCallback<T>,\n  ): void\n  deleteByCriteria(\n    className: string,\n    data: Dictionary<unknown>,\n    callback: QBCallback<{ total_deleted: number }>,\n  ): void\n}\n\ndeclare class QBExtended extends QuickBlox {\n  users: QBExtendedUsers;\n  data: QBExtendedData;\n  init(\n    appIdOrToken: string | number,\n    authKeyOrAppId: string | number,\n    authSecret: string | null | undefined,\n    accountKey: string,\n    config?: QBConfig\n  ): void;\n  private _axios;\n  private _bindMethods;\n  private _initAxios;\n  private _usersGetById;\n  private _dataCreateChild;\n  private _dataUpdateByCriteria;\n  private _dataDeleteByCriteria;\n  private _contentCreateAndUpload;\n}\n")),(0,r.kt)("h2",{id:"utilities"},"Utilities"),(0,r.kt)("p",null,"To enhance the usability of the library, a set of utilities has been developed to simplify\ninteraction with the QuickBlox SDK in the context of the Q-Consultation application.\nThese utilities were specifically created for the Q-Consultation application,\naiming to streamline and expedite the execution of tasks related to QuickBlox functionality in this application.\nBelow is a list of these utilities for your reference."),(0,r.kt)("p",null,'All utility functions are imported from the "quickblox" folder located in the "packages" directory.'),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="Import"',title:'"Import"'},"import {\n  promisifyCall,\n  isQBError,\n  userHasTag,\n  parseUserCustomData,\n  stringifyUserCustomData\n} from '@qc/quickblox'\n")),(0,r.kt)("h3",{id:"promisifycall"},(0,r.kt)("inlineCode",{parentName:"h3"},"promisifyCall")),(0,r.kt)("p",null,"This function provides the ability to invoke methods of the QBExtended class,\nwrapping them in promises to ensure convenient asynchronous handling of function results.\nThe first parameter of the function is the method of the QBExtended class,\nfollowed by the parameters that need to be passed to this method."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="Internal Type"',title:'"Internal','Type"':!0},"declare interface QBCallback<T> {\n  (error: null | undefined, result: T): void\n  (error: QBError, result: null | undefined): void\n}\n\ninterface PromisifyCall {\n    <R>(fn: (cb: QBCallback<R>) => void): Promise<R>;\n    <T1, R>(fn: (arg1: T1, cb: QBCallback<R>) => void, arg1: T1): Promise<R>;\n    <T1, T2, R>(fn: (arg1: T1, arg2: T2, cb: QBCallback<R>) => void, arg1: T1, arg2: T2): Promise<R>;\n    <T1, T2, T3, R>(fn: (arg1: T1, arg2: T2, arg3: T3, cb: QBCallback<R>) => void, arg1: T1, arg2: T2, arg3: T3): Promise<R>;\n    <T1, T2, T3, T4, R>(fn: (arg1: T1, arg2: T2, arg3: T3, arg4: T4, cb: QBCallback<R>) => void, arg1: T1, arg2: T2, arg3: T3, arg4: T4): Promise<R>;\n}\n\ndeclare const promisifyCall: PromisifyCall;\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="Usage example"',title:'"Usage','example"':!0},"import { promisifyCall } from '@qc/quickblox'\n\nasync () => {\n  const user = await promisifyCall(QB.login, { email, password })\n}\n")),(0,r.kt)("h3",{id:"isqberror"},(0,r.kt)("inlineCode",{parentName:"h3"},"isQBError")),(0,r.kt)("p",null,"The function checks whether the error object is an instance of the QBError class."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="Internal Type"',title:'"Internal','Type"':!0},"declare function isQBError(error: unknown): error is QBError;\n")),(0,r.kt)("h3",{id:"userhastag"},(0,r.kt)("inlineCode",{parentName:"h3"},"userHasTag")),(0,r.kt)("p",null,"The function checks whether the user object contains the specified tag in the ",(0,r.kt)("inlineCode",{parentName:"p"},"user_tags")," array."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="Internal Type"',title:'"Internal','Type"':!0},"declare function userHasTag(user: QBUser, tag: string): boolean | undefined;\n")),(0,r.kt)("h3",{id:"parseusercustomdata"},(0,r.kt)("inlineCode",{parentName:"h3"},"parseUserCustomData")),(0,r.kt)("p",null,"The function parses the JSON string ",(0,r.kt)("inlineCode",{parentName:"p"},"customDataText")," into an object of type ",(0,r.kt)("inlineCode",{parentName:"p"},"QBUserCustomData"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="Internal Type"',title:'"Internal','Type"':!0},"declare function parseUserCustomData(customDataText?: string | null): QBUserCustomData;\n")),(0,r.kt)("h3",{id:"stringifyusercustomdata"},(0,r.kt)("inlineCode",{parentName:"h3"},"stringifyUserCustomData")),(0,r.kt)("p",null,"The function converts the customDataText object into a JSON string."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="Internal Type"',title:'"Internal','Type"':!0},"declare function stringifyUserCustomData(customDataText?: QBUserCustomData | null): string | undefined;\n")))}p.isMDXComponent=!0}}]);